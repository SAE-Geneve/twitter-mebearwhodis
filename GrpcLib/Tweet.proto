// You have to fill it up!

// Once you have completed this you can run both commands in this folder!
// $VCPKG_ROOT\installed\x64-windows\tools\protobuf\protoc.exe --proto_path=. --cpp_out=. Tweet.proto
// $VCPKG_ROOT\installed\x64-windows\tools\protobuf\protoc.exe --proto_path=. --grpc_out=. --plugin=protoc-gen-grpc=..\..\vcpkg\installed\x64-windows\tools\grpc\grpc_cpp_plugin.exe Tweet.proto
// And when this is successful (no error of any kind).
// You can use the cmake to generate the project (do this in powershell)
// PROJECT_ROOT> mkdir Build
// PROJECT_ROOT> cd Build
// PROJECT_ROOT/Build> cmake .. -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_ROOT\scripts\buildsystems\vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x64-windows
// PROJECT_ROOT/Build> start grpc-twitter.sln
// This should start you for the next phase!

syntax = "proto3";

package proto;

message TweetIn {
    string user = 1;
    string content = 2;
    int64 time = 3;
    int64 token = 4;
}

message TweetOut {
    bool error = 1;
}

message FollowIn {
    string name = 1;
    int64 token = 2;
}

message FollowOut {
    bool error = 1;
}

message ShowIn {
    string user = 1;
    int64 token = 2;
}

message ShowOut {
    repeated TweetIn tweets = 1;
    bool error = 2;
}

message LoginIn {
    string user = 1;
    string pass = 2;
}

message LoginOut {
    bool error = 1;
    int64 token = 2;
}

message LogoutIn {
    int64 token = 1;
}

message LogoutOut {
    bool error = 1;
}

message UpdateIn {
    int64 token = 1;
}

message UpdateOut {
    TweetIn tweet = 1;
}

message RegisterIn {
    string name = 1;
    string pass = 2;
}

message RegisterOut {
    bool error = 1;
    int64 token = 2;
}

service TweetService {
    rpc Tweet(TweetIn) returns (TweetOut);
    rpc Follow(FollowIn) returns (FollowOut);
    rpc Show(ShowIn) returns (ShowOut);
    rpc Login(LoginIn) returns (LoginOut);
    rpc Logout(LogoutIn) returns (LogoutOut);
    rpc Update(UpdateIn) returns (UpdateOut);
    rpc Register(RegisterIn) returns (RegisterOut);
}